// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id           Int        @id @default(autoincrement())
  name         String
  gender       String
  phone_number String
  nickname     String
  password     String
  address      String?
  email        String
  created_at   DateTime   @default(now())
  policies     policies[]
  carts        carts[]
}

model policies {
  id                  Int      @id @default(autoincrement())
  is_essential_agreed Boolean  @default(false)
  is_optional_agreed  Boolean? @default(false)
  user_id             Int
  users               users    @relation(fields: [user_id], references: [id])
}

model categories {
  id       Int        @id @default(autoincrement())
  name     String
  products products[]
}

model subcategories {
  id       Int        @id @default(autoincrement())
  name     String
  products products[]
}

model products {
  id             Int             @id @default(autoincrement())
  kor_name       String
  eng_name       String
  price          Decimal         @db.Decimal(1, 1)
  quantity       Int             @default(10)
  category_id    Int
  subcategory_id Int
  sale_rate      Decimal         @db.Decimal(1, 1)
  is_new         Boolean         @default(false)
  created_at     DateTime        @default(now())
  images         images[]
  carts          carts[]
  categories     categories      @relation(fields: [category_id], references: [id])
  subcategories  subcategories[] @relation(fields: [subcategory_id], references: [id])
}

model images {
  id         Int      @id @default(autoincrement())
  url        String
  is_main    Boolean? @default(false)
  product_id Int
  products   products @relation(fields: [product_id], references: [id])
}

model carts {
  id         Int      @id @default(autoincrement())
  product_id Int
  user_id    Int
  created_at DateTime @default(now())
  products   products @relation(fields: [product_id], references: [id])
  users      users    @relation(fields: [user_id], references: [id])
}
